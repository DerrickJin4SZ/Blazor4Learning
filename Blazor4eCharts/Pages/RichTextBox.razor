@page "/richtextbox4tiny"
@using ClosedXML.Excel
@inject IJSRuntime JSRuntime

<h3>RichTextBox</h3>


 <h1>Hello, world!</h1>
 Welcome to your new app.
<br />
<MudButton  @onclick="printContext">printContext</MudButton>
<br />
<MudButton @onclick="AddContent">AddContent</MudButton>
<BootstrapBlazor.Components.Editor IsEditor="true" @bind-Value="@EditorValue" ShowSubmit="false" Height="400" />

@code {


    private IJSObjectReference _exportJs;
    private string EditorValue { get; set; } = string.Empty;
    private BootstrapBlazor.Components.Editor? editor { get; set; }


    private async Task printContext()
    {

        //获得template地址
        string rootpath = System.IO.Path.Combine(System.IO.Directory.GetCurrentDirectory(), "wwwroot");
        var fileStream = System.IO.File.OpenRead(rootpath+"/template/Investigation Appendix Template.xlsx");
        //读取template信息
        using (var workbook = new XLWorkbook(fileStream))
        {
            //获得第一个worksheet
            var worksheet1 = workbook.Worksheet(1);
            string text = EditorValue;
            string contentText = System.Net.WebUtility.HtmlDecode(text.Replace("<br>", "\n"));
            string result = System.Text.RegularExpressions.Regex.Replace(contentText, "<.*?>", "");
            worksheet1.Cell("A6").Value = result;



            using (var stream = new MemoryStream())
            {
                workbook.SaveAs(stream);
                var content = stream.ToArray();

                var contentName = "Appendix.xlsx";
                var contentType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet";
                _exportJs = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./Pages/RichTextBox.razor.js");
                await _exportJs.InvokeVoidAsync("BlazorDownloadFile", contentName, contentType, content);
            }
        }


    }

    private void AddContent()
    {
        EditorValue += "<br><p>1.Description</p>";
    }
}
